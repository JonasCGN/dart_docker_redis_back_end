# Iniciar a imagem do docker api

sudo docker build -t <name_image>:latest .

# Login no docker hub

docker login

# adicionar a imagem no docker hub

docker tag <name_image>:latest <your_registry>/<name_image>:latest
docker push <your_registry>/<name_image>:latest

# Iniciar um swarm localmente

docker swarm init 

ou

docker swarm init --advertise-addr <your-Ip>

# Parar um swarm localmente

docker swarm leave

caso de falha do comando acima

docker swarm leave --force

# Deploy desse swarm

docker stack deploy --compose-file docker-stack.yml <name-project>

# verificar serviço

docker service ls

Ver serviço:
docker service ps <NAME>

# verificar os node

docker node ls

# clear

docker stop $(docker ps -q)
docker rm $(docker ps -aq)

docker rmi $(docker images -q)
docker volume rm $(docker volume ls -q)
docker network prune -f

# Caso de falha com network

docker network rm project-network

# recuperar token

docker swarm join-token worker
docker swarm join-token manager // Usar caso esteja vazio

# caso venha atualizar a imagem no swarm

docker service update --image <your_registry>/<name_image>:latest <serviceName>

# reload docker

sudo service docker restart 

# promoter

docker node promote <NODE>

# utilizar outra maquina

- Maquina 1:

docker swarm init
ngrok tcp <IP-LOCAL>:2377

- Maquina 2:

nmap <IP-NGROK> -p 2377 // Caso ache deu certo o passo da maquina 1.
docker swarm join --token <YOUR-TOKEN> <IP-NGROK>:2377

# atualizar imagem para replicas

docker service update --replicas 2 SO_db
